# Generated by Django 3.1.5 on 2021-01-27 18:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'HOD'), (2, 'TEACHER'), (3, 'STUDENT'), (4, 'TRAINER'), (5, 'TRAINEE')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='applyforexam',
            fields=[
                ('applyforexam_id', models.AutoField(primary_key=True, serialize=False)),
                ('courses_id', models.IntegerField()),
                ('certificate', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_id', models.IntegerField()),
                ('attendance_date', models.DateField()),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='courses',
            fields=[
                ('courses_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=50)),
                ('course_pic', models.FileField(upload_to='uploads')),
                ('course_duration', models.CharField(max_length=20)),
                ('course_department', models.CharField(max_length=15)),
                ('course_trainer', models.CharField(max_length=15)),
                ('course_fee', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='hod',
            fields=[
                ('hod_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=50)),
                ('mobile_num', models.IntegerField()),
                ('dob', models.DateField()),
                ('qualification', models.CharField(max_length=20)),
                ('total_experience', models.IntegerField()),
                ('hodimag', models.FileField(upload_to='')),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(max_length=20)),
                ('department', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='login',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.EmailField(max_length=50)),
                ('password', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=50)),
                ('mobile_num', models.IntegerField()),
                ('dob', models.DateField()),
                ('fathername', models.CharField(blank=True, max_length=30, null=True)),
                ('mothername', models.CharField(blank=True, max_length=30, null=True)),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('guardnumber', models.IntegerField(blank=True, null=True)),
                ('standard', models.CharField(max_length=20)),
                ('board', models.CharField(blank=True, max_length=20, null=True)),
                ('studtype', models.CharField(blank=True, max_length=10, null=True)),
                ('schoolname', models.CharField(blank=True, max_length=50, null=True)),
                ('splace', models.CharField(blank=True, max_length=50, null=True)),
                ('spincode', models.IntegerField(blank=True, null=True)),
                ('studentimag', models.FileField(upload_to='Student')),
                ('password', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='subjects',
            fields=[
                ('subjects_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=50)),
                ('department', models.CharField(max_length=15)),
                ('teacher', models.CharField(blank=True, max_length=20, null=True)),
                ('hod_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_hod', to='publicapp.hod')),
            ],
        ),
        migrations.CreateModel(
            name='trainee',
            fields=[
                ('trainee_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=50)),
                ('mobile_num', models.IntegerField()),
                ('dob', models.DateField()),
                ('traineeimag', models.FileField(upload_to='trainee')),
                ('fathername', models.CharField(blank=True, max_length=30, null=True)),
                ('mothername', models.CharField(blank=True, max_length=30, null=True)),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('guardnumber', models.IntegerField(blank=True, null=True)),
                ('course', models.CharField(blank=True, max_length=20, null=True)),
                ('password', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='trainerreg',
            fields=[
                ('trainer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=50)),
                ('mobile_num', models.IntegerField()),
                ('dob', models.DateField()),
                ('qualification', models.CharField(max_length=20)),
                ('total_experience', models.CharField(max_length=5)),
                ('subjects', models.CharField(max_length=20)),
                ('available_time', models.CharField(max_length=50)),
                ('occupation', models.CharField(max_length=20)),
                ('trainerimag', models.FileField(upload_to='')),
                ('housename', models.CharField(max_length=50)),
                ('place', models.CharField(max_length=50)),
                ('pincode', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Trainers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mobile_num', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('dob', models.DateField(blank=True, null=True)),
                ('qualification', models.CharField(blank=True, max_length=20, null=True)),
                ('total_experience', models.CharField(blank=True, max_length=5, null=True)),
                ('department', models.CharField(blank=True, max_length=20, null=True)),
                ('available_time', models.CharField(blank=True, max_length=50, null=True)),
                ('trainerimage', models.FileField(blank=True, null=True, upload_to='trainer')),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('subjects', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students_name', to='publicapp.subjects')),
                ('trainer_name', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trainees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mobile_num', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('dob', models.DateField(blank=True, null=True)),
                ('fathername', models.CharField(blank=True, max_length=30, null=True)),
                ('mothername', models.CharField(blank=True, max_length=30, null=True)),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('guardnumber', models.IntegerField(blank=True, null=True)),
                ('board', models.CharField(blank=True, max_length=20, null=True)),
                ('traineetype', models.CharField(blank=True, max_length=10, null=True)),
                ('schoolname', models.CharField(blank=True, max_length=50, null=True)),
                ('traineetimage', models.FileField(blank=True, null=True, upload_to='Trainee')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.courses')),
                ('trainee', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='teacherreg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=50)),
                ('mobile_num', models.IntegerField()),
                ('dob', models.DateField()),
                ('qualification', models.CharField(max_length=20)),
                ('total_experience', models.CharField(max_length=5)),
                ('department', models.CharField(max_length=20)),
                ('available_time', models.CharField(max_length=50)),
                ('teacherimag', models.FileField(upload_to='teacher')),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=20, null=True)),
                ('subjects', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mobile_num', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('dob', models.DateField(blank=True, null=True)),
                ('qualification', models.CharField(blank=True, max_length=20, null=True)),
                ('total_experience', models.CharField(blank=True, max_length=5, null=True)),
                ('department', models.CharField(blank=True, max_length=20, null=True)),
                ('available_time', models.CharField(blank=True, max_length=50, null=True)),
                ('teacherimage', models.FileField(blank=True, null=True, upload_to='teacher')),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('subjects', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_for_student', to='publicapp.subjects')),
                ('teacher', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teachers_for_students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='subjects',
            name='teacher_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_teacher', to='publicapp.teacherreg'),
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('mobile_num', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('dob', models.DateField(blank=True, null=True)),
                ('fathername', models.CharField(blank=True, max_length=30, null=True)),
                ('mothername', models.CharField(blank=True, max_length=30, null=True)),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('guardnumber', models.IntegerField(blank=True, null=True)),
                ('standard', models.CharField(blank=True, max_length=20, null=True)),
                ('board', models.CharField(blank=True, max_length=20, null=True)),
                ('studtype', models.CharField(blank=True, max_length=10, null=True)),
                ('schoolname', models.CharField(blank=True, max_length=50, null=True)),
                ('studentimage', models.FileField(blank=True, null=True, upload_to='Student')),
                ('student_name', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='studentresult',
            fields=[
                ('studentresult_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_exam_marks', models.FloatField(default=0)),
                ('grade', models.CharField(max_length=5)),
                ('status', models.CharField(max_length=20)),
                ('date', models.DateField()),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student')),
                ('subject_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.subjects')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
                ('trainee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee')),
            ],
        ),
        migrations.CreateModel(
            name='salary',
            fields=[
                ('salary_id', models.AutoField(primary_key=True, serialize=False)),
                ('month', models.CharField(choices=[('january', 'january'), ('february', 'february'), ('march', 'march'), ('april', 'april'), ('may', 'may'), ('june', 'june'), ('july', 'july'), ('august', 'august'), ('september', 'september'), ('october', 'october'), ('november', 'november'), ('december', 'december')], max_length=35)),
                ('salaryamount', models.IntegerField()),
                ('paymentstatus', models.CharField(max_length=50)),
                ('pendingsalary', models.IntegerField()),
                ('hod_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.hod')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
            ],
        ),
        migrations.CreateModel(
            name='recordedvideos',
            fields=[
                ('recordedvideos_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('subjects_id', models.IntegerField()),
                ('video', models.FileField(upload_to='publicapp')),
                ('hod', models.CharField(max_length=35)),
                ('subject', models.CharField(blank=True, max_length=35, null=True)),
                ('hod_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.hod')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
            ],
        ),
        migrations.CreateModel(
            name='notes',
            fields=[
                ('notes_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(blank=True, max_length=35, null=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('notes_pdf', models.FileField(upload_to='Notes')),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
                ('trainee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee')),
            ],
        ),
        migrations.CreateModel(
            name='leavereport',
            fields=[
                ('leavereport_id', models.AutoField(primary_key=True, serialize=False)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('teacheremail', models.CharField(max_length=20)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('hod_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.hod')),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
                ('trainee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee')),
            ],
        ),
        migrations.CreateModel(
            name='interplacement',
            fields=[
                ('interplacement_id', models.AutoField(primary_key=True, serialize=False)),
                ('companyname', models.CharField(max_length=10)),
                ('date', models.DateField()),
                ('time', models.TimeField(max_length=10)),
                ('job_description', models.CharField(max_length=100)),
                ('course_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.subjects')),
                ('hod_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.hod')),
                ('trainee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee')),
            ],
        ),
        migrations.CreateModel(
            name='Hods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('qualification', models.CharField(blank=True, max_length=20, null=True)),
                ('total_experience', models.IntegerField(blank=True, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('hodimage', models.FileField(blank=True, null=True, upload_to='')),
                ('housename', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=120, null=True)),
                ('hod', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='fees',
            fields=[
                ('fees_id', models.AutoField(primary_key=True, serialize=False)),
                ('feetype', models.CharField(choices=[('june-september', 'june-september'), ('october-december', 'october-december'), ('january-march', 'january-march')], max_length=35)),
                ('feeamount', models.IntegerField()),
                ('paymentstatus', models.CharField(max_length=50)),
                ('due', models.CharField(max_length=50)),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student')),
                ('trainee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee')),
            ],
        ),
        migrations.CreateModel(
            name='feedbackstudent',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=20)),
                ('date', models.DateField()),
                ('feedback', models.TextField()),
                ('teacheremail', models.CharField(max_length=20)),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
            ],
        ),
        migrations.CreateModel(
            name='examination',
            fields=[
                ('examination_id', models.AutoField(primary_key=True, serialize=False)),
                ('examdetails', models.TextField(max_length=20)),
                ('date', models.DateField()),
                ('time', models.TimeField(max_length=10)),
                ('hod_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.hod')),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
                ('trainee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee')),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='hod_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.hod'),
        ),
        migrations.AddField(
            model_name='courses',
            name='trainee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee'),
        ),
        migrations.CreateModel(
            name='complaints',
            fields=[
                ('complaints_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=20)),
                ('admin_hod', models.IntegerField()),
                ('complaints_description', models.TextField()),
                ('hod_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.hod')),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
                ('trainee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee')),
            ],
        ),
        migrations.CreateModel(
            name='commontimetable',
            fields=[
                ('commontimetable_id', models.AutoField(primary_key=True, serialize=False)),
                ('day', models.CharField(max_length=15)),
                ('time', models.TimeField()),
                ('available_time', models.CharField(max_length=50)),
                ('standard', models.CharField(max_length=20)),
                ('student_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student')),
                ('subjects_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.subjects')),
                ('teacher_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg')),
            ],
        ),
        migrations.CreateModel(
            name='attendancereport',
            fields=[
                ('attendancereport_id', models.AutoField(primary_key=True, serialize=False)),
                ('student_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('attendance_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.attendance')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='hod_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.hod'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='student_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.student'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='teacher_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.teacherreg'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='trainee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='publicapp.trainee'),
        ),
    ]
